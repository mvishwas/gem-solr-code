<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<description>Example job to get you started. It provides a skeleton for a typical batch application</description>
	
	<batch:job id="gemfireDataLoader">
		<batch:step id="step1">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="customerdataReader" writer="gemfirewriter"
					commit-interval="10" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="customerdataReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="resource" value="#{jobParameters['gemfiredata.file.name']}" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="KEY,FIRSTNAME,LASTNAME,AGE,EMAIL,DOB,PLACEOFBIRTH,ADDRESS" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.emc.gemfiresolr.batchapp.CustomerFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>


	<bean id="gemfirewriter" class="com.emc.gemfiresolr.batchapp.GemfireDataLoaderWritter">
		<property name="customerRegion" ref="Customer"></property>
	</bean>


	<!-- stored job-metadata in database -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="mysql" />
	</bean>

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="gemfireJobLauncher" class="com.emc.gemfiresolr.batchapp.GemfireLoaderJobLauncher">
		<property name="jobLauncher" ref="jobLauncher"></property>
		<property name="job" ref="gemfireDataLoader"></property>
	</bean>

</beans>
